module.exports = function (grunt) {

  grunt.initConfig({

    // Read project settings from package.json. No modification needed.
    pkg: grunt.file.readJSON('package.json'),

    // Define commonly used directories (e.g. src, build, release).
    // Default structure assumes a source folder for all source files,
    // a temp folder for temporary files generated by Grunt,
    // and an output folder for built files. Modify as needed.
    dirs: {
      source: 'assets/src',
      temp: 'assets/temp',
      output: 'assets/dist'
    },

    // Determine the environment to build the app. It first checks for an
    // `--env` option supplied by the user when running grunt (e.g.
    // `grunt --env=production`). If there is no option specified,
    // it searches for the environment variable `GRUNT_ENV`.
    // Finally, it defaults to development.
    env: grunt.option('env') || process.env.GRUNT_ENV || 'development',


    // Task configurations.

    jshint: {
      options: {
        // Set to false to fail the task on jshint errors.
        force: true,
        // Define globals. Defaulting to jQuery, AngularJS and UnderscoreJS.
        globals: {
          jQuery: true,
          angular: true,
          _: true
        },
        browser: true
      },
      development: {
        options: {
          // Allow use of debug statements.
          devel: true
        },
        src: ['<%= dirs.source %>/js/**/*.js']
      },
      production: {
        src: ['<%= dirs.source %>/js/**/*.js']
      }
    },

    concat: {
      js: {
        src: ['<%= dirs.source %>/js/**/*.js'],
        dest: '<%= dirs.output %>/js/app.js'
      }
    },

    uglify: {
      options: {
        sourceMap: true,
        preserveComments: 'some'
      },
      development: {
        options: {
          beautify: true
        },
        src: '<%= concat.js.dest %>',
        dest: '<% dirs.output %>/js/app.min.js'
      },
      production: {
        src: '<%= concat.js.dest %>',
        dest: '<% dirs.output %>/js/app.min.js'
      }
    },

    compass: {
      options: {
        // optional config file for Compass
        config: 'config/config.rb',
        sassDir: '<%= dirs.source %>/sass',
        cssDir: '<%= dirs.output %>/css'
      },
      development: {
        environment: 'development'
      },
      production: {
        environment: 'production'
      }
    },

    watch: {
      gruntfile: {
        files: 'Gruntfile.js',
        options: {
          reload: true
        }
      },
      js: {
        files: '<%= jshint.development.src %>',
        tasks: ['jshint:development', 'concat', 'uglify:development']
      },
      sass: {
        files: ['<%= compass.options.sassDir %>/**/*.sass'],
        tasks: ['compass:development']
      },
      livereload: {
        files: ['<%= dirs.output %>/**/*', '**/*.html'],
        options: {
          livereload: true
        }
      }
    },

    connect: {
      // Start a connect server to serve static files and livereload.
      development: {
        options: {
          port: 9001,
          // Set this to the folder containing index.html, relative to Gruntfile.
          base: '.',
          directory: true,
          livereload: true
        }
      }
    },

    clean: {
      temp: '<%= dirs.temp %>',
      dist: '<%= dirs.dist %>'
    }

  });

  require('load-grunt-tasks')(grunt);

  var env = grunt.config('env');

  var jsTasks = ['jshint:' + env, 'concat', 'uglify:' + env];
  grunt.registerTask('dist-js');

  var cssTasks = ['compass:' + env];
  grunt.registerTask('dist-css', cssTasks);

  grunt.registerTask('dist', ['clean:dist', 'dist-css', 'dist-js']);
  grunt.registerTask('default', ['dist']);

};
