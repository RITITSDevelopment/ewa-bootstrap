module.exports = function (grunt) {

  grunt.initConfig({

    // Read project settings from package.json. No modification needed.
    pkg: grunt.file.readJSON('package.json'),

    // Define commonly used directories (e.g. src, build, release).
    // Default structure assumes a source folder for all source files,
    // a temp folder for temporary files generated by Grunt,
    // and an output folder for built files. Modify as needed.
    dirs: {
      source: 'src',
      temp: 'temp',
      output: 'dist'
    },

    // Determine the environment to build the app. It first checks for an
    // `--env` option supplied by the user when running grunt (e.g.
    // `grunt --env=production`). If there is no option specified,
    // it searches for the environment variable `GRUNT_ENV`.
    // Finally, it defaults to development.
    env: grunt.option('env') || process.env.GRUNT_ENV || 'development',


    // Task configurations.

    concat: {
      js: {
        src: ['<%= dirs.source %>/js/**/*.js'],
        dest: '<%= dirs.output %>/js/app.js'
      }
    },

    uglify: {
      options: {
        sourceMap: true,
        preserveComments: 'some'
      },
      production: {
        src: '<%= concat.js.dest %>',
        dest: '<% dirs.output %>/js/app.min.js'
      }
    },

    compass: {
      options: {
        // optional config file for Compass
        config: '<%= dirs.source %>/config/config.rb',
        sassDir: '<%= dirs.source %>/sass',
        cssDir: '<%= dirs.output %>/css'
      },
      development: {
        environment: 'development'
      },
      production: {
        environment: 'production'
      }
    }

  });

  grunt.loadNpmTasks('grunt-contrib-concat');
  grunt.loadNpmTasks('grunt-contrib-uglify');
  grunt.loadNpmTasks('grunt-contrib-compass');
  grunt.loadNpmTasks('grunt-contrib-watch');
  grunt.loadNpmTasks('grunt-contrib-clean');

  var defaultTasks = ['concat', 'compass:' + grunt.config('env')];

  // Only register these tasks in production mode.
  if (grunt.config('env') === 'production') {
    defaultTasks.push('uglify');
  }
  grunt.registerTask('default', defaultTasks);

};
